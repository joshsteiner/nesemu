#define DEF_OP(n,i,m,c) OPCODES[n] = (struct op){ i, m, c }

DEF_OP( 0x00, BRK, IMPLIED,     CYCLES(7, NO_PENALTY) );
DEF_OP( 0x01, ORA, INDIRECT_X,  CYCLES(6, NO_PENALTY) );
DEF_OP( 0x05, ORA, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0x06, ASL, ZERO_PAGE,   CYCLES(5, NO_PENALTY) );
DEF_OP( 0x08, PHP, IMPLIED,     CYCLES(3, NO_PENALTY) );
DEF_OP( 0x09, ORA, IMMEDIATE,   CYCLES(2, NO_PENALTY) );
DEF_OP( 0x0a, ASL, ACCUMULATOR, CYCLES(2, NO_PENALTY) );
DEF_OP( 0x0d, ORA, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0x0e, ASL, ABSOLUTE,    CYCLES(6, NO_PENALTY) );

DEF_OP( 0x10, BPL, RELATIVE,    CYCLES(2, BRANCH_PENALTY) );
DEF_OP( 0x11, ORA, INDIRECT_Y,  CYCLES(5, PAGE_CROSS_PENALTY) );
DEF_OP( 0x15, ORA, ZERO_PAGE_X, CYCLES(4, NO_PENALTY) );
DEF_OP( 0x16, ASL, ZERO_PAGE_X, CYCLES(6, NO_PENALTY) );
DEF_OP( 0x18, CLC, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0x19, ORA, ABSOLUTE_Y,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0x1d, ORA, ABSOLUTE_X,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0x1e, ASL, ABSOLUTE_X,  CYCLES(7, NO_PENALTY) );

DEF_OP( 0x20, JSR, ABSOLUTE,    CYCLES(6, NO_PENALTY) );
DEF_OP( 0x21, AND, INDIRECT_X,  CYCLES(6, NO_PENALTY) );
DEF_OP( 0x24, BIT, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0x25, AND, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0x26, ROL, ZERO_PAGE,   CYCLES(5, NO_PENALTY) );
DEF_OP( 0x28, PLP, IMPLIED,     CYCLES(4, NO_PENALTY) );
DEF_OP( 0x29, AND, IMMEDIATE,   CYCLES(2, NO_PENALTY) );
DEF_OP( 0x2a, ROL, ACCUMULATOR, CYCLES(2, NO_PENALTY) );
DEF_OP( 0x2c, BIT, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0x2d, AND, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0x2e, ROL, ABSOLUTE,    CYCLES(6, NO_PENALTY) );

DEF_OP( 0x30, BMI, RELATIVE,    CYCLES(2, BRANCH_PENALTY) );
DEF_OP( 0x31, AND, INDIRECT_Y,  CYCLES(5, PAGE_CROSS_PENALTY) );
DEF_OP( 0x35, AND, ZERO_PAGE_X, CYCLES(4, NO_PENALTY) );
DEF_OP( 0x36, ROL, ZERO_PAGE_X, CYCLES(6, NO_PENALTY) );
DEF_OP( 0x38, SEC, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0x39, AND, ABSOLUTE_Y,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0x3d, AND, ABSOLUTE_X,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0x3e, ROL, ABSOLUTE_X,  CYCLES(7, NO_PENALTY) );

DEF_OP( 0x40, RTI, IMPLIED,     CYCLES(6, NO_PENALTY) );
DEF_OP( 0x41, EOR, INDIRECT_X,  CYCLES(6, NO_PENALTY) );
DEF_OP( 0x45, EOR, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0x46, LSR, ZERO_PAGE,   CYCLES(5, NO_PENALTY) );
DEF_OP( 0x48, PHA, IMPLIED,     CYCLES(3, NO_PENALTY) );
DEF_OP( 0x49, EOR, IMMEDIATE,   CYCLES(2, NO_PENALTY) );
DEF_OP( 0x4a, LSR, ACCUMULATOR, CYCLES(2, NO_PENALTY) );
DEF_OP( 0x4c, JMP, ABSOLUTE,    CYCLES(3, NO_PENALTY) );
DEF_OP( 0x4d, EOR, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0x4e, LSR, ABSOLUTE,    CYCLES(6, NO_PENALTY) );

DEF_OP( 0x50, BVC, RELATIVE,    CYCLES(2, BRANCH_PENALTY) );
DEF_OP( 0x51, EOR, INDIRECT_Y , CYCLES(5, PAGE_CROSS_PENALTY) );
DEF_OP( 0x55, EOR, ZERO_PAGE_X, CYCLES(4, NO_PENALTY) );
DEF_OP( 0x56, LSR, ZERO_PAGE_X, CYCLES(6, NO_PENALTY) );
DEF_OP( 0x58, CLI, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0x59, EOR, ABSOLUTE_Y,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0x5d, EOR, ABSOLUTE_X,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0x5e, LSR, ABSOLUTE_X,  CYCLES(7, NO_PENALTY) );

DEF_OP( 0x60, RTS, IMPLIED,     CYCLES(6, NO_PENALTY) );
DEF_OP( 0x61, ADC, INDIRECT_X,  CYCLES(6, NO_PENALTY) );
DEF_OP( 0x65, ADC, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0x66, ROR, ZERO_PAGE,   CYCLES(5, NO_PENALTY) );
DEF_OP( 0x68, PLA, IMPLIED,     CYCLES(4, NO_PENALTY) );
DEF_OP( 0x69, ADC, IMMEDIATE,   CYCLES(2, NO_PENALTY) );
DEF_OP( 0x6a, ROR, ACCUMULATOR, CYCLES(2, NO_PENALTY) );
DEF_OP( 0x6c, JMP, INDIRECT,    CYCLES(5, NO_PENALTY) );
DEF_OP( 0x6d, ADC, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0x6e, ROR, ABSOLUTE,    CYCLES(6, NO_PENALTY) );

DEF_OP( 0x70, BVS, RELATIVE,    CYCLES(2, BRANCH_PENALTY) );
DEF_OP( 0x71, ADC, INDIRECT_Y , CYCLES(5, PAGE_CROSS_PENALTY) );
DEF_OP( 0x75, ADC, ZERO_PAGE_X, CYCLES(4, NO_PENALTY) );
DEF_OP( 0x76, ROR, ZERO_PAGE_X, CYCLES(6, NO_PENALTY) );
DEF_OP( 0x78, SEI, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0x79, ADC, ABSOLUTE_Y,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0x7d, ADC, ABSOLUTE_X,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0x7e, ROR, ABSOLUTE_X,  CYCLES(7, NO_PENALTY) );

DEF_OP( 0x81, STA, INDIRECT_X,  CYCLES(6, NO_PENALTY) );
DEF_OP( 0x84, STY, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0x85, STA, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0x86, STX, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0x88, DEY, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0x8a, TXA, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0x8c, STY, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0x8d, STA, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0x8e, STX, ABSOLUTE,    CYCLES(4, NO_PENALTY) );

DEF_OP( 0x90, BCC, RELATIVE,    CYCLES(2, BRANCH_PENALTY) );
DEF_OP( 0x91, STA, INDIRECT_Y , CYCLES(6, NO_PENALTY) );
DEF_OP( 0x94, STY, ZERO_PAGE_X, CYCLES(4, NO_PENALTY) );
DEF_OP( 0x95, STA, ZERO_PAGE_X, CYCLES(4, NO_PENALTY) );
DEF_OP( 0x96, STX, ZERO_PAGE_Y, CYCLES(4, NO_PENALTY) );
DEF_OP( 0x98, TYA, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0x99, STA, ABSOLUTE_Y,  CYCLES(5, NO_PENALTY) );
DEF_OP( 0x9a, TXS, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0x9d, STA, ABSOLUTE_X,  CYCLES(5, NO_PENALTY) );

DEF_OP( 0xa0, LDY, IMMEDIATE,   CYCLES(2, NO_PENALTY) );
DEF_OP( 0xa1, LDA, INDIRECT_X,  CYCLES(6, NO_PENALTY) );
DEF_OP( 0xa2, LDX, IMMEDIATE,   CYCLES(2, NO_PENALTY) );
DEF_OP( 0xa4, LDY, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0xa5, LDA, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0xa6, LDX, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0xa8, TAY, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0xa9, LDA, IMMEDIATE,   CYCLES(2, NO_PENALTY) );
DEF_OP( 0xaa, TAX, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0xac, LDY, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0xad, LDA, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0xae, LDX, ABSOLUTE,    CYCLES(4, NO_PENALTY) );

DEF_OP( 0xb0, BCS, RELATIVE,    CYCLES(2, BRANCH_PENALTY) );
DEF_OP( 0xb1, LDA, INDIRECT_Y , CYCLES(5, PAGE_CROSS_PENALTY) );
DEF_OP( 0xb4, LDY, ZERO_PAGE_X, CYCLES(4, NO_PENALTY) );
DEF_OP( 0xb5, LDA, ZERO_PAGE_X, CYCLES(4, NO_PENALTY) );
DEF_OP( 0xb6, LDX, ZERO_PAGE_Y, CYCLES(4, NO_PENALTY) );
DEF_OP( 0xb8, CLV, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0xb9, LDA, ABSOLUTE_Y,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0xba, TSX, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0xbc, LDY, ABSOLUTE_X,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0xbd, LDA, ABSOLUTE_X,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0xbe, LDX, ABSOLUTE_Y,  CYCLES(4, PAGE_CROSS_PENALTY) );

DEF_OP( 0xc0, CPY, IMMEDIATE,   CYCLES(2, NO_PENALTY) );
DEF_OP( 0xc1, CMP, INDIRECT_X,  CYCLES(6, NO_PENALTY) );
DEF_OP( 0xc4, CPY, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0xc5, CMP, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0xc6, DEC, ZERO_PAGE,   CYCLES(5, NO_PENALTY) );
DEF_OP( 0xc8, INY, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0xc9, CMP, IMMEDIATE,   CYCLES(2, NO_PENALTY) );
DEF_OP( 0xca, DEX, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0xcc, CPY, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0xcd, CMP, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0xce, DEC, ABSOLUTE,    CYCLES(6, NO_PENALTY) );

DEF_OP( 0xd0, BNE, RELATIVE,    CYCLES(2, BRANCH_PENALTY) );
DEF_OP( 0xd1, CMP, INDIRECT_Y , CYCLES(5, PAGE_CROSS_PENALTY) );
DEF_OP( 0xd5, CMP, ZERO_PAGE_X, CYCLES(4, NO_PENALTY) );
DEF_OP( 0xd6, DEC, ZERO_PAGE_X, CYCLES(6, NO_PENALTY) );
DEF_OP( 0xd8, CLD, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0xd9, CMP, ABSOLUTE_Y,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0xdd, CMP, ABSOLUTE_X,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0xde, DEC, ABSOLUTE_X,  CYCLES(7, NO_PENALTY) );

DEF_OP( 0xe0, CPX, IMMEDIATE,   CYCLES(2, NO_PENALTY) );
DEF_OP( 0xe1, SBC, INDIRECT_X,  CYCLES(6, NO_PENALTY) );
DEF_OP( 0xe4, CPX, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0xe5, SBC, ZERO_PAGE,   CYCLES(3, NO_PENALTY) );
DEF_OP( 0xe6, INC, ZERO_PAGE,   CYCLES(5, NO_PENALTY) );
DEF_OP( 0xe8, INX, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0xe9, SBC, IMMEDIATE,   CYCLES(2, NO_PENALTY) );
DEF_OP( 0xea, NOP, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0xec, CPX, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0xed, SBC, ABSOLUTE,    CYCLES(4, NO_PENALTY) );
DEF_OP( 0xee, INC, ABSOLUTE,    CYCLES(6, NO_PENALTY) );

DEF_OP( 0xf0, BEQ, RELATIVE,    CYCLES(2, BRANCH_PENALTY) );
DEF_OP( 0xf1, SBC, INDIRECT_Y , CYCLES(5, PAGE_CROSS_PENALTY) );
DEF_OP( 0xf5, SBC, ZERO_PAGE_X, CYCLES(4, NO_PENALTY) );
DEF_OP( 0xf6, INC, ZERO_PAGE_X, CYCLES(6, NO_PENALTY) );
DEF_OP( 0xf8, SED, IMPLIED,     CYCLES(2, NO_PENALTY) );
DEF_OP( 0xf9, SBC, ABSOLUTE_Y,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0xfd, SBC, ABSOLUTE_X,  CYCLES(4, PAGE_CROSS_PENALTY) );
DEF_OP( 0xfe, INC, ABSOLUTE_X,  CYCLES(7, NO_PENALTY) );